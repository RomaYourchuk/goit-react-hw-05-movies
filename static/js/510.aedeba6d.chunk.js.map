{"version":3,"file":"static/js/510.aedeba6d.chunk.js","mappings":"8LA8BA,UA1BA,WACE,OAA8BA,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAKR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoCH,GAASI,KAAKL,KACjD,CAACC,KAGF,gCACGF,IACqB,IAAnBA,EAAQO,QACP,qEAEA,wBACGP,EAAQQ,KAAI,SAAAC,GAAM,OACjB,2BACE,qCAAaA,EAAOC,eAAeC,aACnC,uBAAIF,EAAOG,YAFJH,EAAOI,WAOxB,uB,qJC1BN,IAAMC,EAAU,mCACVC,EAAW,+BAIV,SAASC,IAEd,OAAOC,EADE,UAAMF,GAAN,OAHM,sBAGN,oBAAqCD,IAE3CR,MAAK,SAAAY,GACJ,GAAyB,IAArBA,EAAKC,YACP,MAAMC,MAAMF,EAAKG,YAEnB,OAAOH,KAERZ,MAAK,SAAAY,GACJ,OAAOA,EAAKI,WAIX,SAASC,EAAqBrB,GAEnC,OAAOe,EADE,UAAMF,EAAN,kBAAwBb,EAAxB,oBAA2CY,IAI/C,SAASU,EAAgBtB,GAE9B,OAAOe,EADE,UAAMF,EAAN,kBAAwBb,EAAxB,4BAAmDY,IACnCR,MAAK,SAAAY,GAAI,OAAIA,EAAKO,QAEtC,SAASC,EAAgBxB,GAE9B,OAAOe,EADE,UAAMF,EAAN,kBAAwBb,EAAxB,4BAAmDY,IACnCR,MAAK,SAAAY,GAAI,OAAIA,EAAKI,WAEtC,SAASK,EAAkBC,GAEhC,OAAOX,EADE,UAAMF,EAAN,iCAAuCD,EAAvC,kBAAwDc,IAE9DtB,MAAK,SAAAY,GACJ,GAAyB,IAArBA,EAAKC,YACP,MAAMC,MAAMF,EAAKG,YAEnB,OAAOH,KAERZ,MAAK,SAAAY,GAAI,OAAIA,EAAKI,WAGvB,SAASL,EAAaY,GACpB,OAAOC,MAAMD,GAAKvB,MAAK,SAAAyB,GACrB,IAAKA,EAAEC,GACL,MAAMZ,MAAMW,EAAEV,YAEhB,OAAOU,EAAEE","sources":["components/views/ReviewsView.jsx","services/fetchMoviesApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as moviesSearchService from '../../services/fetchMoviesApi';\n\nfunction ReviewsView() {\n  const [reviews, setReviews] = useState(null);\n  const { movieId } = useParams();\n  useEffect(() => {\n    moviesSearchService.FetchReviewsApi(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews &&\n        (reviews.length === 0 ? (\n          <p>We don't have any reviews for this movie</p>\n        ) : (\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h3>Author: {review.author_details.username}</h3>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        ))}\n      <hr />\n    </>\n  );\n}\nexport default ReviewsView;","const API_KEY = '57b826625aa884ee20da0e1b59f62068';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst dayTrend = '/trending/movie/day';\n\nexport function FetchMovieApi() {\n  const url = `${BASE_URL}${dayTrend}?api_key=${API_KEY}`;\n  return fetchService(url)\n    .then(data => {\n      if (data.total_pages === 0) {\n        throw Error(data.statusText);\n      }\n      return data;\n    })\n    .then(data => {\n      return data.results;\n    });\n}\n\nexport function FetchMovieDetailsApi(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n  return fetchService(url);\n}\n\nexport function FetchCreditsApi(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  return fetchService(url).then(data => data.cast);\n}\nexport function FetchReviewsApi(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  return fetchService(url).then(data => data.results);\n}\nexport function SearchMovieByName(searchQuery) {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`;\n  return fetchService(url)\n    .then(data => {\n      if (data.total_pages === 0) {\n        throw Error(data.statusText);\n      }\n      return data;\n    })\n    .then(data => data.results);\n}\n\nfunction fetchService(url) {\n  return fetch(url).then(r => {\n    if (!r.ok) {\n      throw Error(r.statusText);\n    }\n    return r.json();\n  });\n}"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","moviesSearchService","then","length","map","review","author_details","username","content","id","API_KEY","BASE_URL","FetchMovieApi","fetchService","data","total_pages","Error","statusText","results","FetchMovieDetailsApi","FetchCreditsApi","cast","FetchReviewsApi","SearchMovieByName","searchQuery","url","fetch","r","ok","json"],"sourceRoot":""}